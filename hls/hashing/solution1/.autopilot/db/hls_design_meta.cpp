#include "hls_design_meta.h"
const Port_Property HLS_Design_Meta::port_props[]={
	Port_Property("ap_clk", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_rst", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_start", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_done", 1, hls_out, -1, "", "", 1),
	Port_Property("ap_idle", 1, hls_out, -1, "", "", 1),
	Port_Property("ap_ready", 1, hls_out, -1, "", "", 1),
	Port_Property("op_type", 32, hls_in, 0, "ap_none", "in_data", 1),
	Port_Property("hash", 32, hls_in, 1, "ap_none", "in_data", 1),
	Port_Property("val_addr", 32, hls_in, 2, "ap_none", "in_data", 1),
	Port_Property("key_val_dram_address0", 7, hls_out, 3, "ap_memory", "mem_address", 1),
	Port_Property("key_val_dram_ce0", 1, hls_out, 3, "ap_memory", "mem_ce", 1),
	Port_Property("key_val_dram_we0", 1, hls_out, 3, "ap_memory", "mem_we", 1),
	Port_Property("key_val_dram_d0", 32, hls_out, 3, "ap_memory", "mem_din", 1),
	Port_Property("key_val_dram_q0", 32, hls_in, 3, "ap_memory", "mem_dout", 1),
	Port_Property("key_val_dram_address1", 7, hls_out, 3, "ap_memory", "mem_address", 1),
	Port_Property("key_val_dram_ce1", 1, hls_out, 3, "ap_memory", "mem_ce", 1),
	Port_Property("key_val_dram_q1", 32, hls_in, 3, "ap_memory", "mem_dout", 1),
	Port_Property("val_addr_bram_Addr_A", 32, hls_out, 4, "bram", "mem_address", 1),
	Port_Property("val_addr_bram_EN_A", 1, hls_out, 4, "bram", "mem_ce", 1),
	Port_Property("val_addr_bram_WEN_A", 4, hls_out, 4, "bram", "mem_we", 1),
	Port_Property("val_addr_bram_Din_A", 32, hls_out, 4, "bram", "mem_din", 1),
	Port_Property("val_addr_bram_Dout_A", 32, hls_in, 4, "bram", "mem_dout", 1),
	Port_Property("val_addr_bram_Clk_A", 1, hls_out, 4, "bram", "mem_clk", 1),
	Port_Property("val_addr_bram_Rst_A", 1, hls_out, 4, "bram", "mem_rst", 1),
	Port_Property("ap_return", 32, hls_out, -1, "", "", 1),
};
const char* HLS_Design_Meta::dut_name = "execute";
